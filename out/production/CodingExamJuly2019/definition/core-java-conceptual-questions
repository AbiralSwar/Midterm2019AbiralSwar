Please answer the below core-java Questions:

What is programing language?
A. A programming language is a computer language engineered to create a standard form of commands.
  These commands can be interpreted into a code understood by a machine. Programs are created through programming
  languages to control the behavior and output of a machine through accurate algorithms, similar to the human
  communication process.




What jdk contains or composed of and define each components?
A. The following components of JAVA are as follows:

1. Java Compiler; The javac tool (accessed using javac command) reads class and interface definitions, written
in the Java programming language, and compiles them into bytecode class files. It can also process annotations
in Java source files and classes.
2. Java Interpreter: Java interpreter is used to interpret the .class Java files that have been compiled by Java
compiler (javac). Java interpreter is accessed using java command. The java command starts a Java application.
3. Java Disassembler: The javap command is the disassembly tool of JDK that disassembles one or more class files.
Its output depends on the options used. If no options are used, javap prints out the package, protected, and public
fields and methods of the classes passed to it. The javap prints its output to stdout.
4. Java Header File Generator: Java Header File Generator (javah command-line tool) generates C header and source
files that are needed to implement native methods. The generated header and source files are used by C programs to
reference an object's instance variables from native source code.
5. Java Documentation: Java Documentation helps to maintain code. The javadoc tool comes as part of Java Development
Kit that parses the declarations and documentation comments in a set of Java source files and produces a corresponding
set of HTML pages describing the public and protected classes, nested classes (but not anonymous inner classes),
interfaces, constructors, methods, and fields.
6. Java Debugger: The Java Debugger, jdb, is a simple command-line debugger for Java classes. It is a demonstration
of the Java Platform Debugger Architecture that provides inspection and debugging of a local or remote Java Virtual
Machine.
7. Java Applet Viewer: This is used to view the Java applets. The applet viewer command connects to the documents or
resources designated by urls and displays each applet referenced by the documents in its own window.





What is IDE?
A. IDE stand for Integrated Development environment. An integrated development environment (IDE) is a software suite
that consolidates basic tools required to write and test software. Developers use numerous tools throughout software
code creation, building and testing. Development tools often include text editors, code libraries,
  compilers and test platforms.



What are the IDEs available in the market to support java?
A. Eclipse, Intellij Idea, NetBeans, AndroidStudio, Enide Studio 2014, BlueJ, jEdit, jGRASP, JSource, JDeveloper,
  DrJava etc



Explain the entire java life cycle.
A. Programmer use any text editor to create high level Java text file.This file is saved as a .java file on the disk.
Then compile this text file using the Java compiler, which result in a .classfile being created on the disk.
The .class file contains the bytecodes. The file is then loaded into memory by the class loader. The bytecode
verifier confirms that the bytecodes are valid and not hostile. Finally, the JVM reads the bytecodes in memory and
translates them into machine code.



what is class?
A. A class is blueprint of objects and methods.


What is object?
A. An object is a instance or a member of a class.


What is the entry point of an application?
A. Main method is the entry point of an application.


Why main is static?
A. Main method is the entry point for JVM to execute the code. for static method we do not need to create object for
that main is static.


Which class is the superclass of all classes?
A. Object class is the super class for all class.


What is difference between path and classpath variables?
A. Difference between PATH and CLASSPATH is that  PATH is an environment variable which is used to locate JDK
   binaries like "java" or "javac" command used to run java program and compile java source file. On the other hand,
   CLASSPATH, an environment variable is used by System or Application ClassLoader to locate and load compile Java
   bytecodes stored in the .class file.


What is the difference between an Interface and Abstract class?
A. Abstract class is a class that contains one or more abstract methods , and therefore can never be instantiated.
Abstract classes are defined so that other classes can extend them and make them concrete by implementing the abstract
methods. An interface in the Java programming language is an abstract type that is used to specify a behaviour that
classes must implement. Interfaces are declared using the interface keyword, and may only contain method signature and
constant declarations.


Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
A. No we can not create object in Interface and Abstract class. Interface contains methods to be implemented, in
abstract class we can implement some of them and can create more new methods as required keeping at least one abstract
method. later abstract class can be extended and create and concrete class where there will be no abstract methods.


what is Access Specifier?
A. Access Specifier is to determine the visibility of methods and variables.


What is OOP ? Define each feature of java OOP.
A. OOP stands for object oriented program.
   Features of java OOP:
     1. Encapsulation
     2. Inheritance
     3. Polymorphism
     4. Abstraction

   1. Encapsulation: Encapsulation means data hiding. By doing encapsulation data only canbe accessed by public methods.
   There are various way to hide the data. By making a method, variable private access limits to the class user. By
   using getter and setter method private data can be accessed, hiding implementation of methods and data from user is
   called encapsulation. from the users. It improves maintainability and flexibility and re-usability. The fields can be
   made read-only User would not be knowing what is going on behind the scene. They would only be knowing that to update
   a field call set method and to read a field call get method but what these set and get methods are doing is purely
   hidden from them.

   2. Inheritance: Inheritance refers to a feature of Java programming that lets you create classes that are derived
   from other classes. A class that's based on another class inherits the other class. The class that is inherited is
   the parent class, the base class, or the superclass

   3. Polymorphism: Polymorphism is the ability of an object to take on many forms. The most common use of polymorphism
   in OOP occurs when a parent class reference is used to refer to a child class object. Any Java object that can pass
   more than one IS-A test is considered to be polymorphic.
   Polymorphism in Java has two types:
     a. Compile time polymorphism (static binding):It happens during compile time.
      Example: Method overloading is an example of static polymorphism,
     b. Runtime polymorphism (dynamic binding): It happens during run time.
      Example: Method overriding is an example of dynamic polymorphism.

   4. Abstraction: Abstraction in Java or Object oriented programming is a way to segregate implementation from an
   interface and one of the five fundamentals along with Encapsulation, Inheritance, Polymorphism, Class, and Object.
   Abstraction in Java is achieved by  using interface and abstract class in Java. An interface or abstract class is
   something which is not concrete , something which is incomplete. In order to use interface or abstract class, we need
   to extend and implement an abstract method with concrete behavior.


What is Java Package and which package is imported by default?
A. A java package is a group of similar types of classes, interfaces and sub-packages. The java.lang package is always
   imported by default.


What is API? Name list of API that you have used so far.
A. An application program interface (API) is a set of routines, protocols, and tools for building software applications.
   Basically, an API specifies how software components should interact. Additionally, APIs are used when programming
   graphical user interface (GUI) components. A good API makes it easier to develop a program by providing all the
   building blocks. A programmer then puts the blocks together.
   i have used java.* package, org.selenium.


Does java support multiple inheritance, explain why or why not?
A. No,java does not support multiple inheritance. To reduce the complexity and simplify the language, multiple
inheritance is not supported in java.


What is method overloading and when it happens?
A. If a class has multiple methods having same name but different in parameters, it is known as Method Overloading.
   it happens in compile time.


Explain exceptions in java and how to handle it.
A. Exception is an abnormal condition.
   In Java, an exception is an event that disrupts the normal flow of the program. It is an object which is thrown at
   runtime.


What is static keyword in java? How it has been used in variables and methods ?
A. The he static keyword denotes that a member variable, or method, can be accessed without requiring
   an instantiation of the class to which it belongswhen static key word is used with a method that method can
   be called without creating a object.


What is final and how it has been used variables and methods?
A. A final class cannot be subclassed. A final variable can only be initialized once. A final method cannot be
overridden by subclasses.


What is final, finally and finalize?
A. Final: Final variables are nothing but constants. We cannot change the value of a final variable once it is
initialized. A final method cannot be overridden. Which means even though a sub class can call the final method of
parent class without any issues but it cannot override it.

   Finally: Finally key word used to execute finally block when the try and catch block exits which ensures that the
   finally block is executed even if an unexpected exception occurs.

   Finalize(): Called by the garbage collector on an object when garbage collection determines that there are no more
   references to the object.


What is a constructor ?
A. A constructor is being used to instantiate a object by using new operator. It is an instance method with the same
name of their class.


Can we have multiple constructors in a class?
A. Yes. we can have multiple constructor in class but when we create a parameterized constructor, we need to use default
   constructor.


If we don't have a constructor declared, what is called during the object creation?
A. When we do no have construct declared and we crate a object the constructor is called default constructor.


What is "this" keyword in java ?
A. "this" key word in java represents instance of the class. this can be used to access class methods and variables.



What is "super" keyword in java? How many possible way can you use?
A. "super" keyword in java is used for accessing the members of the super class by the extended class.


What is JVM stand for ?
A. JAVA virtual machine.


Is JVM platform independent?
A. Yes, JVM is a independent platform


What version of java are you using?



What is JAR stand for ?



What is the difference between JDK and JVM?
What is the difference between JVM and JRE?
What is compile time and run time?
What is heap?
How java manage it's memory?
What is the difference between String, StringBuffer and StringBuilder?
What is Singleton class?
What is Serialization and Deserialization?
when to use transient variable in java?
Difference between while and do..while loop?
What is Enum?
What is Iterator?
Which one will take more memory, an int or Integer?
Why is String Immutable in Java?
What is constructor chaining in Java?
The difference between Serial and Parallel Garbage Collector?
What is JIT stands for?
Explain Java Heap space and Garbage collection?
Can you guarantee the garbage collection process?
What is the difference between stack and heap in Java?
What is reflection in java and why is it useful?
what is multithreading in java?
What is the use of synchronization in Java?
What is Framework?
What are the testing Framework available in java?
Difference between jUnit and testNG?
What are the dependencies for this project?
what is dependency injection in java?
What is static binding and dynamic binding?









